apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: codeforces-clone
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: codeforces-clone
      component: backend
  template:
    metadata:
      labels:
        app: codeforces-clone
        component: backend
    spec:
      containers:
      - name: backend
        image: codeforces-clone/backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        - name: JWT_EXPIRES_IN
          value: "7d"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: postgres-db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: postgres-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: postgres-password
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: mongodb-uri
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: rabbitmq-url
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: frontend-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: uploads-volume
          mountPath: /app/uploads
      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: backend-logs-pvc
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: backend-uploads-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
